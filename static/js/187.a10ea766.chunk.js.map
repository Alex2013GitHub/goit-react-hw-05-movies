{"version":3,"file":"static/js/187.a10ea766.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.js","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  display: block;\n  border-radius: 10px;\n  text-decoration: none;\n  height: 100%;\n`;\n\nexport const CardWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: inline-flex;\n  justify-content: center;\n  align-items: flex-start;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  padding: 16px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  color: blueviolet;\n`;\n","import { Link, CardWrapper } from './MovieCard.styled';\n\nconst MovieCard = ({ movieLink, stateLink, image, isNotPoster, title }) => {\n  return (\n    <Link to={movieLink} state={stateLink}>\n      <CardWrapper style={{ backgroundImage: `ul(${image})` }}>\n        {isNotPoster && title}\n      </CardWrapper>\n    </Link>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 185px);\n  gap: 16px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  height: 278px;\n  border-radius: 4px;\n  overflow: hidden;\n  box-shadow: 1px 3px 3px 1px #7a7a7a;\n\n  :hover {\n    transform: scale(1.025);\n  }\n`;\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport { POSTER_CONFIG } from 'services/Api';\nimport { List, Item } from './MovieList.styled';\nimport defaultImage from 'default-movie-768x1129.jpg';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, poster_path: poster, title }) => {\n        const moviePoster = poster\n          ? POSTER_CONFIG.baseUrl.concat(POSTER_CONFIG.posterSizes[2], poster)\n          : defaultImage;\n        return (\n          <Item key={id}>\n            <MovieCard\n              movieLink={`/movies/${id}`}\n              stateLink={{ from: location }}\n              image={moviePoster}\n              isNotPoster={!poster}\n              title={title}\n            />\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\n\nexport const SearchForm = styled.form`\n  display: flex;\n  padding: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 8px 8px;\n\n  border: 1px solid navy;\n  border-left: none;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n\n  border: 1px solid navy;\n  border-right: none;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n\n  outline: none;\n  color: #707070;\n  cursor: pointer;\n\n  :hover {\n    color: navy;\n  }\n\n  :active {\n    color: orangered;\n  }\n`;","import { ImSearch } from 'react-icons/im';\nimport { SearchForm, Input, Button } from './SearchBar.styled';\n\nconst SearchBar = ({ query, onChange, onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const normalizeValue = e.target.query.value.trim();\n    onChange(normalizeValue);\n    onSubmit(normalizeValue);\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <Button type=\"submit\">\n          <ImSearch width={20} />\n        </Button>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie...\"\n          onChange={e => onChange(e.target.value)}\n        />\n      </SearchForm>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList';\nimport SearchBar from 'components/SearchBar';\nimport { getMovieByQuery } from 'services/Api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParams = searchParams.get('query') ?? '';\n\n  const [query, setQuery] = useState(() => setQuery);\n  const location = useLocation();\n\n  const updateQueryParams = query => {\n    const newSearchParams = !query ? {} : { query };\n    setSearchParams(newSearchParams);\n  };\n\n  useEffect(() => {\n    if (query) {\n      getMovieByQuery(query)\n        .then(({ results }) => setMovies(results))\n        .catch(console.log);\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <SearchBar\n        query={queryParams}\n        onChange={updateQueryParams}\n        onSubmit={setQuery}\n      />\n      {!movies.length && <MovieList movies={movies} location={location} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = 'b8e97797a63a229ee5b42773102304ac';\n\nexport const POSTER_CONFIG = {\n  baseUrl: 'http://image.tmdb.org/t/p/',\n  posterSizes: ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'],\n};\n\nconst getMovies = async ({ queryType, pathParams, query }) => {\n  const config = {\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  };\n\n  const { data } = await axios.get(`${queryType}${pathParams}`, config);\n  return data;\n};\n\nexport const getTrends = () => {\n  const queryType = '/trending';\n\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n\n  const pathParams = '/'.concat(mediaType, '/', timeWindow);\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieByQuery = query => {\n  const queryType = '/search';\n  const pathParams = `/movie`;\n\n  return getMovies({ queryType, pathParams, query });\n};\n\nexport const getMovieCreditsById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}/credits`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieReviewsById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}/reviews`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getApiConfig = () => {\n  const pathParams = '';\n\n  return getMovies({ queryType: '/configuration', pathParams });\n};\n"],"names":["Link","styled","NavLink","CardWrapper","p","theme","fontWeights","medium","movieLink","stateLink","image","isNotPoster","title","to","state","style","backgroundImage","List","Item","movies","location","map","id","poster","poster_path","moviePoster","POSTER_CONFIG","defaultImage","from","SearchForm","Input","Button","query","onChange","onSubmit","e","preventDefault","normalizeValue","target","value","trim","type","width","name","autoComplete","autoFocus","placeholder","useState","setMovies","useSearchParams","searchParams","setSearchParams","queryParams","get","setQuery","useLocation","useEffect","getMovieByQuery","then","results","catch","console","log","length","MovieList","baseUrl","posterSizes","getMovies","queryType","pathParams","config","baseURL","params","api_key","axios","data","getTrends","concat","getMovieById","getMovieCreditsById","getMovieReviewsById"],"sourceRoot":""}