{"version":3,"file":"static/js/266.f346b73c.chunk.js","mappings":"gNAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8GAOJE,EAAcF,EAAAA,GAAAA,IAAH,mSAMP,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,YAAYC,MAAxB,I,SCJlB,EAVkB,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC7D,OACE,SAACZ,EAAD,CAAMa,GAAIL,EAAWM,MAAOL,EAA5B,UACE,SAACN,EAAD,CAAaY,MAAO,CAAEC,gBAAgB,MAAD,OAAQN,EAAR,MAArC,SACGC,GAAeC,KAIvB,E,UCRYK,EAAOhB,EAAAA,GAAAA,GAAH,uIAOJiB,EAAOjB,EAAAA,GAAAA,GAAH,+K,UCmBjB,EAvBkB,SAAC,GAA0B,IAAxBkB,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3B,OACE,SAACH,EAAD,UACGE,EAAOE,KAAI,YAAyC,IAAtCC,EAAqC,EAArCA,GAAiBC,EAAoB,EAAjCC,YAAqBZ,EAAY,EAAZA,MAChCa,EAAcF,EAChBG,EAAAA,GAAAA,QAAAA,OAA6BA,EAAAA,GAAAA,YAAAA,GAA8BH,GAC3DI,EACJ,OACE,SAACT,EAAD,WACE,SAAC,EAAD,CACEV,UAAS,kBAAac,GACtBb,UAAW,CAAEmB,KAAMR,GACnBV,MAAOe,EACPd,aAAcY,EACdX,MAAOA,KANAU,EAUd,KAGN,C,6FCDD,UApBa,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACMV,GAAWW,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAYC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBL,EAAUK,EAA3B,GAClB,GAAE,IAEEhB,EAAOiB,OAIZ,OACE,6BACE,eAAIrB,MAAO,CAAEsB,cAAe,QAA5B,SAAsC,oBACtC,SAAC,IAAD,CAAWlB,OAAQA,EAAQC,SAAUA,MAG1C,C,2NCpBYM,EAAgB,CAC3BY,QAAS,6BACTC,YAAa,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,aAGzDC,EAAS,mCAAG,sGAASC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,MAC1CC,EAAS,CACbC,QAAS,+BACTC,OAAQ,CACNC,QAXU,mCAYVJ,MAAAA,IALY,SASOK,EAAAA,EAAAA,IAAA,UAAaP,GAAb,OAAyBC,GAAcE,GAT9C,uBASRK,EATQ,EASRA,KATQ,kBAUTA,GAVS,2CAAH,sDAaFhB,EAAY,WACvB,IAKMS,EAAa,IAAIQ,OAHL,QAGuB,IAFtB,QAInB,OAAOV,EAAU,CAAEC,UAPD,YAOYC,WAAAA,GAC/B,EAEYS,EAAe,SAAA7B,GAC1B,IACMoB,EAAU,WAAOpB,GAEvB,OAAOkB,EAAU,CAAEC,UAHD,SAGYC,WAAAA,GAC/B,EAEYU,EAAkB,SAAAT,GAI7B,OAAOH,EAAU,CAAEC,UAHD,UAGYC,WAFd,SAE0BC,MAAAA,GAC3C,EAEYU,EAAsB,SAAA/B,GACjC,IACMoB,EAAU,WAAOpB,EAAP,YAEhB,OAAOkB,EAAU,CAAEC,UAHD,SAGYC,WAAAA,GAC/B,EAEYY,EAAsB,SAAAhC,GACjC,IACMoB,EAAU,WAAOpB,EAAP,YAEhB,OAAOkB,EAAU,CAAEC,UAHD,SAGYC,WAAAA,GAC/B,C","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.js","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  display: block;\n  border-radius: 10px;\n  text-decoration: none;\n  height: 100%;\n`;\n\nexport const CardWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: inline-flex;\n  justify-content: center;\n  align-items: flex-start;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  padding: 16px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  color: blueviolet;\n`;\n","import { Link, CardWrapper } from './MovieCard.styled';\n\nconst MovieCard = ({ movieLink, stateLink, image, isNotPoster, title }) => {\n  return (\n    <Link to={movieLink} state={stateLink}>\n      <CardWrapper style={{ backgroundImage: `ul(${image})` }}>\n        {isNotPoster && title}\n      </CardWrapper>\n    </Link>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 185px);\n  gap: 16px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  height: 278px;\n  border-radius: 4px;\n  overflow: hidden;\n  box-shadow: 1px 3px 3px 1px #7a7a7a;\n\n  :hover {\n    transform: scale(1.025);\n  }\n`;\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport { POSTER_CONFIG } from 'services/Api';\nimport { List, Item } from './MovieList.styled';\nimport defaultImage from 'default-movie-768x1129.jpg';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, poster_path: poster, title }) => {\n        const moviePoster = poster\n          ? POSTER_CONFIG.baseUrl.concat(POSTER_CONFIG.posterSizes[2], poster)\n          : defaultImage;\n        return (\n          <Item key={id}>\n            <MovieCard\n              movieLink={`/movies/${id}`}\n              stateLink={{ from: location }}\n              image={moviePoster}\n              isNotPoster={!poster}\n              title={title}\n            />\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MovieList from 'components/MovieList';\nimport { getTrends } from 'services/Api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrends().then(({ results }) => setMovies(results));\n  }, []);\n\n  if (!movies.length) {\n    return;\n  }\n\n  return (\n    <main>\n      <h1 style={{ paddingBottom: '16px' }}>Tranding today</h1>\n      <MovieList movies={movies} location={location} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = 'b8e97797a63a229ee5b42773102304ac';\n\nexport const POSTER_CONFIG = {\n  baseUrl: 'http://image.tmdb.org/t/p/',\n  posterSizes: ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'],\n};\n\nconst getMovies = async ({ queryType, pathParams, query }) => {\n  const config = {\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  };\n\n  const { data } = await axios.get(`${queryType}${pathParams}`, config);\n  return data;\n};\n\nexport const getTrends = () => {\n  const queryType = '/trending';\n\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n\n  const pathParams = '/'.concat(mediaType, '/', timeWindow);\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieByQuery = query => {\n  const queryType = '/search';\n  const pathParams = `/movie`;\n\n  return getMovies({ queryType, pathParams, query });\n};\n\nexport const getMovieCreditsById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}/credits`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieReviewsById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}/reviews`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getApiConfig = () => {\n  const pathParams = '';\n\n  return getMovies({ queryType: '/configuration', pathParams });\n};\n"],"names":["Link","styled","NavLink","CardWrapper","p","theme","fontWeights","medium","movieLink","stateLink","image","isNotPoster","title","to","state","style","backgroundImage","List","Item","movies","location","map","id","poster","poster_path","moviePoster","POSTER_CONFIG","defaultImage","from","useState","setMovies","useLocation","useEffect","getTrends","then","results","length","paddingBottom","baseUrl","posterSizes","getMovies","queryType","pathParams","query","config","baseURL","params","api_key","axios","data","concat","getMovieById","getMovieByQuery","getMovieCreditsById","getMovieReviewsById"],"sourceRoot":""}