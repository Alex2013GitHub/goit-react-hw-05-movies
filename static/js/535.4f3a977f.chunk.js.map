{"version":3,"file":"static/js/535.4f3a977f.chunk.js","mappings":"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","sources":["components/MovieDetailsBasic/MovieDetailsBasic.styled.js","components/MovieDetailsBasic/MovieDetailsBasic.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/Api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const InfoWrapper = styled.section`\n  display: flex;\n  gap: 16px;\n  padding-bottom: 8px;\n  margin-bottom: 8px;\n`;\n\nexport const MovieInfo = styled.div`\n  /* padding-left: 8px; */\n`;\n\nexport const Title = styled.h2`\n  color: blueviolet;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 8px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 4px;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.spaces[4]}px;\n  padding: 8px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: ${p => p.theme.spaces[3]}px;\n  border-radius: 4px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  color: navy;\n  text-decoration: none;\n\n  &.active {\n    background-color: #dddddd;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orangered;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 185px;\n`;","import { POSTER_CONFIG } from 'services/Api';\nimport defaultPoster from 'default-movie-768x1129.jpg';\nimport {\n  InfoWrapper,\n  MovieInfo,\n  Title,\n  SubTitle,\n  Text,\n  Img,\n} from './MovieDetailsBasic.styled';\n\nconst MovieDetailsBasic = ({ movie }) => {\n  const {\n    poster_path: poster,\n    title,\n    release_date: date,\n    vote_average: vote,\n    overview,\n    genres,\n  } = movie;\n\n  const moviePoster = poster\n    ? POSTER_CONFIG.baseUrl.concat(POSTER_CONFIG.posterSizes[2], poster)\n    : defaultPoster;\n\n  const movieTitle = `${title} (${new Date(date).getFullYear()})`;\n  const movieScore = `${Math.round(vote * 10)}%`;\n  const movieGenresList = genres.map(({ name }) => name.join(', '));\n\n  return (\n    <InfoWrapper>\n      <Img src={moviePoster} alt=\"\" />\n      <MovieInfo>\n        <Title>{movieTitle}</Title>\n        <Text>User Score: {movieScore}</Text>\n        {overview && (\n          <>\n            <SubTitle>Overview</SubTitle>\n            <Text>{overview}</Text>\n          </>\n        )}\n        {!!genres.length && (\n          <>\n            <SubTitle>Genres</SubTitle>\n            <Text>{movieGenresList}</Text>\n          </>\n        )}\n      </MovieInfo>\n    </InfoWrapper>\n  );\n};\n\nexport default MovieDetailsBasic;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n\n  margin-bottom: 8px;\n  padding: 8px 12px;\n\n  border: 1px solid #dddddd;\n  border-radius: 4px;\n  outline: none;\n\n  color: navy;\n  background-color: #dddddd;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  text-decoration: none;\n\n  :hover {\n    border: 1px solid #cccccc;\n\n    color: orangered;\n    background-color: white;\n  }\n`;\n\nexport const AddInfoWrapper = styled.section`\n  padding-top: 8px;\n  border-top: 1px solid #cccccc;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 8px;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: center;\n  gap: ${p => p.theme.spaces[4]}px;\n  padding: 8px;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: ${p => p.theme.spaces[3]}px;\n  border-radius: 4px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  color: navy;\n  text-decoration: none;\n\n  &.active {\n    background-color: #dddddd;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orangered;\n  }\n`;\n","import { Suspense, useState, useEffect } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport MovieDetailsBasic from 'components/MovieDetailsBasic';\nimport { getMovieById } from 'services/Api';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport {\n  BackLink,\n  AddInfoWrapper,\n  SubTitle,\n  Nav,\n  Link,\n} from './MovieDetails.styled';\nimport { ProgressBar } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId).then(data => setMovie(data));\n  }, [movieId]);\n  if (!movie) {\n    return (\n      <ProgressBar\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"progress-bar-loadind\"\n        wrapperStyle=\"progress-bar-wrapper\"\n        borderColor=\"navy\"\n        barColor=\"orangered\"\n      />\n    );\n  }\n  return (\n    <main>\n      <BackLink to={location.state.from}>{<BsArrowLeft />}go back...</BackLink>\n      <MovieDetailsBasic movie={movie} />\n      <AddInfoWrapper>\n        <SubTitle>Additional information</SubTitle>\n\n        <Nav>\n          <Link to=\"cast\" state={{ from: Location.state.from }}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={{ from: Location.state.from }}>\n            Reviews\n          </Link>\n        </Nav>\n      </AddInfoWrapper>\n      <Suspense\n        fallback={\n          <ProgressBar\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"progress-bar-wrapper\"\n            borderColor=\"navy\"\n            barColor=\"orangered\"\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'b8e97797a63a229ee5b42773102304ac';\n\nexport const POSTER_CONFIG = {\n  baseUrl: 'http://image.tmdb.org/t/p/',\n  posterSizes: ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'],\n};\n\nconst getMovies = async ({ queryType, pathParams, query }) => {\n  const config = {\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  };\n\n  const { data } = await axios.get(`${queryType}${pathParams}`, config);\n  return data;\n};\n\nexport const getTrends = () => {\n  const queryType = '/trending';\n\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n\n  const pathParams = '/'.concat(mediaType, '/', timeWindow);\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieByQuery = query => {\n  const queryType = '/search';\n  const pathParams = `/movie`;\n\n  return getMovies({ queryType, pathParams, query });\n};\n\nexport const getMovieCreditsById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}/credits`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getMovieReviewsById = id => {\n  const queryType = '/movie';\n  const pathParams = `/${id}/reviews`;\n\n  return getMovies({ queryType, pathParams });\n};\n\nexport const getApiConfig = () => {\n  const pathParams = '';\n\n  return getMovies({ queryType: '/configuration', pathParams });\n};\n"],"names":["InfoWrapper","styled","MovieInfo","Title","SubTitle","Text","Img","p","theme","spaces","NavLink","fontWeights","medium","movie","poster","poster_path","title","date","release_date","vote","vote_average","overview","genres","moviePoster","POSTER_CONFIG","defaultPoster","movieTitle","Date","getFullYear","movieScore","Math","round","movieGenresList","map","name","join","src","alt","length","BackLink","AddInfoWrapper","Nav","Link","useState","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieById","then","data","to","state","from","Location","Suspense","fallback","height","width","ariaLabel","borderColor","barColor","wrapperStyle","baseUrl","posterSizes","getMovies","queryType","pathParams","query","config","baseURL","params","api_key","axios","getTrends","concat","id","getMovieByQuery","getMovieCreditsById","getMovieReviewsById"],"sourceRoot":""}